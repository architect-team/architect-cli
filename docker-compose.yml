version: "3.7"

services:
  redis:
    image: redis
  db:
    image: postgres:10
    stop_signal: SIGINT # Fast shutdown.
    environment:
      POSTGRES_PASSWORD: password
    volumes:
      - pgdata:/var/lib/postgresql/data
  backend:
    command: >
      bash -c "while !</dev/tcp/db/5432;
               do sleep 0.1;
               done;
               while :;
               do 
               cd /var/code/
               poetry install
               cd /var/code/backend
               python3 ./manage.py migrate;
               python3 ./manage.py runserver 0.0.0.0:8000;
               done;
               "
    image: "bbaser"
    build:
      dockerfile: Dockerfile-image
      context: .
    stop_signal: SIGINT # The devserver only stops on SIGINT.
    stdin_open: true
    tty: true
    volumes:
      - .:/var/code
    ports:
      - "8000"
    depends_on:
      - db
      - redis
    environment:
      IN_DOCKER: 1
  frontend:
    command: >
      bash -c "
               cd /var/code/frontend
               npm install
               while :;
               do npm run dev
               done;
               "
    image: "bbaser"
    build:
      dockerfile: Dockerfile-image
      context: .
    stop_signal: SIGINT # The devserver only stops on SIGINT.
    stdin_open: true
    tty: true
    ports:
      - "8923:8923"
    volumes:
      - .:/var/code
    environment:
      IN_DOCKER: 1
  # extension:
  #   command: >
  #     bash -c "
  #              cd /var/code/extension
  #              npm install
  #              while :;
  #              do npm run serve
  #              done;
  #              "
  #   image: "bbaser"
  #   build:
  #     dockerfile: Dockerfile-image
  #     context: .
  #   stop_signal: SIGINT # The devserver only stops on SIGINT.
  #   stdin_open: true
  #   tty: true
  #   ports:
  #     - "8081:8081"
  #     - "9090:9090"
  #   volumes:
  #     - .:/var/code
  #   environment:
  #     IN_DOCKER: 1
  webserver:
    image: caddy
    depends_on:
      - backend
      - frontend
    ports:
      - "80:8000"
    volumes:
      - .:/var/code
      - ./misc/Caddyfile:/etc/caddy/Caddyfile
  celery:
    image: "bbaser"
    build:
      dockerfile: Dockerfile-image
      context: .
    command: >
      bash -c "while !</dev/tcp/db/5432;
             do sleep 0.1;
             done;
             while :;
             do 
             cd /var/code/
             poetry install
             cd /var/code/backend
             watchmedo auto-restart --directory=./ --pattern=*.py --recursive -- celery -A backend worker -l info
             done;
             "
    volumes:
      - .:/var/code
    depends_on:
      - db
      - redis
    environment:
      IN_DOCKER: 1

volumes:
  pgdata:
    external: true

