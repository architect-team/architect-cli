version: 2.1

executors:
  release:
    working_directory: ~/cli
    docker:
      - image: node:12

jobs:
  test-node-latest: &test
    docker:
      - image: node:latest
    working_directory: ~/cli
    steps:
      - checkout
      - run:
          name: clone submodules
          command: git submodule update --recursive --init
      - restore_cache:
          keys: &cache_config
            - v1-npm-{{checksum ".circleci/config.yml"}}-{{checksum "package-lock.json"}}
            - v1-npm-{{checksum ".circleci/config.yml"}}
      - run:
          name: Install dependencies
          command: npm install
      - run: ./bin/run --version
      - run: ./bin/run --help
      - run:
          name: Testing
          command: npm test
  test-node-12:
    <<: *test
    docker:
      - image: node:12
  test-node-10:
    <<: *test
    docker:
      - image: node:10
  lint:
    executor: release
    steps:
      - checkout
      - restore_cache:
          keys: *cache_config
      - run: npm install
      - run: npm run lint
  cache:
    executor: release
    steps:
      - checkout
      - run: npm install
      - save_cache:
          key: v1-npm-{{checksum ".circleci/config.yml"}}-{{checksum "package-lock.json"}}
          paths:
            - ~/cli/node_modules
            - ~/.npm
            - /usr/local/lib/node_modules
  build_cli:
    executor: release
    steps:
      - checkout
      - restore_cache:
          keys: *cache_config
      - run: npm install
      - run: npm run build
      - persist_to_workspace:
          root: ~/cli
          paths:
            - bin
            - lib
            - npm-shrinkwrap.json
            - oclif.manifest.json
            - package.json
            - package-lock.json
            - README.md
  publish_cli:
    executor: release
    steps:
      - attach_workspace:
          at: ~/cli
      - run:
          name: Authenticate with registry
          command: echo "//npm.pkg.github.com/:_authToken=$NPM_TOKEN" > ~/cli/.npmrc
      - run:
          name: Publish package
          command: npm publish --access public
  publish_graph_lib:
    executor: release
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: npm i --prefix ./src/dependency-graph
      - run:
          name: Build library
          command: npm run build --prefix ./src/dependency-graph
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/cli/.npmrc
      - run:
          name: Publish library
          command: npm publish ./src/dependency-graph

workflows:
  version: 2
  test:
    jobs:
      - lint:
          filters: &branches_only
            tags:
              ignore: /.*/
            branches:
              only: /.*/
      - test-node-latest:
          filters:
            <<: *branches_only
      - test-node-12:
          filters:
            <<: *branches_only
      - test-node-10:
          filters:
            <<: *branches_only
      - cache:
          requires:
            - lint
            - test-node-latest
            - test-node-12
            - test-node-10
      - publish_graph_lib:
          context: Github Packaging
          requires:
            - cache
          filters:
            branches:
              only: master
  release_cli:
    jobs:
      - build_cli:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - publish_cli:
          context: NPM Packaging
          requires:
            - build_cli
