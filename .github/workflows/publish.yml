name: Publish CLI

on: push

env:
  CI: true
  NPM_CACHE_NAME: cli-node-modules
  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
  NPM_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}

jobs:
  build_run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'
      - run: npm ci
      - run: npm run build
      - run: rm -r node_modules
      - run: npm ci --omit=dev
      - run: error=$(./bin/run --version 2>&1 >/dev/null) # Write stderr to env
      - run: | # Check if stderr is not empty and hard error (captures node warnings)
          [ ! -z "$error" ] && echo "$error" && exit 1
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'
      - run: npm ci
      - run: npm run lint
      - run: npm run check-circular
  test:
    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Get npm cache directory
        if: runner.os != 'Windows'
        id: npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - uses: actions/cache@v2
        if: runner.os != 'Windows' # Must be a bug on windows because its doing more harm than good. Try to cache/load almost a GB.
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
      - run: npm run build
      - run: npm test
  publish_cli:
    name: Publish CLI
    if: github.ref_name == 'main' || github.ref_name == 'rc' || startsWith(github.ref_name, 'arc-')
    needs: [lint, test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          clean: true
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - run: npm install
      - run: npm run build
      - run: npm run readme
      - run: npm run generate:schema-docs
      - name: npm publish
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_PUBLISH_TOKEN }}" > .npmrc
          GIT_BRANCH=$(git rev-parse --abbrev-ref HEAD) npm run semantic-release
      - name: docs website re-build
        run: curl -X POST ${{ secrets.NETLIFY_BUILD_HOOK_URL }}
