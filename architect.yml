name: architect-ryan/test
services:
  redis:
    image: redis
  db:
    image: postgres:10
    environment:
      POSTGRES_PASSWORD: password
    ${{ if architect.environment == 'local' }}:
      volumes:
        volume:
          mount_path: /var/lib/postgresql/data
  backend:
    command: |
      bash -c "while !</dev/tcp/db/5432;
               do sleep 0.1;
               done;
               while :;
               do 
               cd /var/code/
               poetry install
               cd /var/code/backend
               python3 ./manage.py migrate;
               python3 ./manage.py runserver 0.0.0.0:8000;
               done;
               "
    image: bbaser
    build:
      context: .
      dockerfile: Dockerfile-image
    ${{ if architect.environment == 'local' }}:
      volumes:
        volume:
          host_path: .
          mount_path: /var/code
    interfaces:
      main: 8000
    depends_on:
      - db
      - redis
    environment:
      IN_DOCKER: 1
  frontend:
    command: |
      bash -c "
               cd /var/code/frontend
               npm install
               while :;
               do npm run dev
               done;
               "
    image: bbaser
    build:
      context: .
      dockerfile: Dockerfile-image
    interfaces:
      main:
        port: 8923
    ${{ if architect.environment == 'local' }}:
      volumes:
        volume:
          host_path: .
          mount_path: /var/code
    environment:
      IN_DOCKER: 1
  webserver:
    image: caddy
    depends_on:
      - backend
      - frontend
    interfaces:
      main:
        port: 8000
    ${{ if architect.environment == 'local' }}:
      volumes:
        volume:
          host_path: .
          mount_path: /var/code
        volume2:
          host_path: ./misc/Caddyfile
          mount_path: /etc/caddy/Caddyfile
    environment:
      BACKEND_URL: ${{ services.backend.interfaces.main.url }}
      FRONTEND_URL: ${{ services.frontend.interfaces.main.url }}
  celery:
    image: bbaser
    build:
      context: .
      dockerfile: Dockerfile-image
    command: |
      bash -c "while !</dev/tcp/db/5432;
             do sleep 0.1;
             done;
             while :;
             do 
             cd /var/code/
             poetry install
             cd /var/code/backend
             watchmedo auto-restart --directory=./ --pattern=*.py --recursive -- celery -A backend worker -l info
             done;
             "
    ${{ if architect.environment == 'local' }}:
      volumes:
        volume:
          host_path: .
          mount_path: /var/code
    depends_on:
      - db
      - redis
    environment:
      IN_DOCKER: 1
